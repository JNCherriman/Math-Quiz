<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGQOAABkDgNgZA35oGQODeBkDg8AZA4NwFQN+YBUDfMgZA4AAGQOAABkDgMgVA
        4JgFQODcBkDg8AZA4N4FQN+aBkDgNgZA3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4AQGQOCABkDf8gZA
        4PAGQOC6BUDgoAZA4LwFQODwBUDf8AZA4HoGQOB4BUDf8AZA4PAGQOC8BkDfoAZA4LoGQODwBUDf8gZA
        34AGQOAEAAAAAAAAAAAAAAAABkDgAgVA4H4GQN//BkDgsgZA4CYAAAAAAAAAAAAAAAAGQOAqBUDftgVA
        3/8FQN//BUDfuAZA4CoAAAAAAAAAAAAAAAAFQOAmBkDfsgVA3/8GQOB8BkDgAgAAAAAAAAAABkDgRAZA
        4PgGQOCoBkDgCAAAAAAAAAAAAAAAAAAAAAAAAAAABkDfCAVA364FQOD8BkDfQgAAAAAAAAAAAAAAAAAA
        AAAAAAAABkDfCAZA4KgFQN/4BkDgRAAAAAAGQOAEBkDgwAZA4OgGQOAUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAZA4BgGQODsBUDfugZA4AIAAAAAAAAAAAAAAAAAAAAAAAAAAAZA3xQGQODoBUDfwAZA
        3wQGQOAwBkDg9gZA4IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQN+MBUDf9AVA
        3yoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOCEBkDf9gVA4DAGQOBsBUDf+AVA4DYGQOACBkDgOAVA
        4DQGQOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQN88BkDg+gZA4GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAGQOA2BkDf+AZA4GwGQOCSBkDg6gZA4BgGQOAsBkDg8gZA4PYGQOByBUDgAAAAAAAAAAAAAAAAAAAA
        AAAGQN8cBkDg7AZA4IgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOAYBkDg6gZA35IGQOCeBUDf5AZA
        4AwGQN8cBkDg6AZA3/8FQN/eBUDfEAAAAAAAAAAAAAAAAAAAAAAGQOASBUDf6AZA4JYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAFQOAMBkDf5AVA4J4GQN+QBkDf6gZA4BgAAAAABkDgQAZA4LoGQOCOBkDgBAAA
        AAAAAAAAAAAAAAAAAAAGQOAeBUDg7gZA4IYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQOAaBkDg7AVA
        344GQOBcBkDg+gZA4FgAAAAAAAAAAAZA3wIGQOACAAAAAAAAAAAAAAAAAAAAAAZA4AAGQOBoBkDg+gZA
        31IAAAAAAAAAAAAAAAAAAAAAAAAAAAVA3wAGQOBgBkDg+gVA31oGQOASBkDg2AVA3+wGQOCEBkDgTgVA
        4DwGQN84BkDfOAZA3zgGQOA+BUDgVAZA4JIGQN/yBUDg6AVA30gFQN84BkDgOAVA3zgGQOA+BkDfVAZA
        4I4FQN/yBkDf0gVA4BAAAAAABkDgKgZA4LoFQN/4BkDg/wZA4P8GQOD/BkDg/wZA4P8GQOD/BkDg/wZA
        3/QGQOD4BkDg/wZA3/8GQN//BkDg/wZA3/8GQN//BkDg/wZA4PQGQOCuBkDgIAAAAAAAAAAAAAAAAAZA
        4AYGQOAkBUDgSAZA4FYGQOBaBkDgygVA33wGQOBUBkDgQAVA3x4GQOAkBUDfRgVA31YFQN9mBUDg3AZA
        32QGQOBUBUDfQgZA3x4GQOAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDgigZA
        31oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOB0BkDgkgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDgQgZA4KgAAAAAAAAAAAAAAAAAAAAABUDgAgZA
        4F4FQN/CBkDgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABUDfDgZA38wGQOAWAAAAAAAAAAAFQN8ABkDfXgZA4MQFQOAaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA33QFQN+IBkDgAAAA
        AAAGQOAuBUDg1AZA4G4FQOB6BkDfdgVA31AGQOAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZA4AgFQODMBUDfOAAAAAAFQOCsBkDg/wZA4P8GQN/6BUDg+gZA
        4P8GQN/2BkDgqAVA4DgGQOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFQN9CBkDfwgVA32gGQOD6BkDg0AVA31QGQN8eBUDfIgZA4EwGQOCiBkDg7AVA4PYGQN+UBkDgFAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOAABUDgbgZA4PwGQN/aBkDgGgAA
        AAAAAAAAAAAAAAAAAAAAAAAABkDfVAZA3/gFQN/4BkDgTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABkDfHgZA4OAGQN/mBkDgQgVA4AIAAAAABkDgAAVA4BwGQOCIBkDg9AZA
        4OoGQOBOBkDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkDgAAZA
        4DgGQODkBUDf9AZA4MAFQOCgBUDfvAZA3+wFQOD4BkDgsgVA4CoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQOAgBkDfkAZA39oGQODwBkDf3AZA
        4J4GQOBABkDgBAAAAAAAAAAAAAAAAAAAAAD4PB8A4BgHAOfD5wDP5/MAn/P5AJ/z+QC/+/0AM/n8ADH5
        /AA5+fwAv/v9AI/j8QDAAAMA/v9/AP7/fwD/fv8A/33/AP+7/wD/sA8A/9PDAP/n8wD/58cA//APAP/4
        PwA=
</value>
  </data>
</root>